### A CI workflow template that makes use of repository secrets and therefore requires authorization.

name: S3-Test tap-universal-file

on:
  pull_request_target:
    types: [opened, synchronize, reopened]

jobs:
  authorize:
    environment: ${{ github.event_name == 'pull_request_target' && github.event.pull_request.head.repo.full_name != github.repository && 'external' || 'internal' }}
    runs-on: ubuntu-latest
    steps:
      - run: true
  pytest-s3:
    needs: authorize
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11", "3.12", "3.13", "3.14"]
    env:
      AWS_ACCESS_KEY_ID: AKIAZPOBIXUJJ434XT5T
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      TAP_UNIVERSAL_FILE_FILE_PATH: derek-tap-filetesting/2023
      TAP_UNIVERSAL_FILE_FILE_REGEX: ^.*airtravel\.csv$
      TAP_UNIVERSAL_FILE_PROTOCOL: s3
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install Poetry
      env:
        PIP_CONSTRAINT: .github/workflows/constraints.txt
      run: |
        python -m pip install --upgrade pip
        pip install poetry
    - name: Install dependencies
      run: |
        poetry install --extras=s3
    - name: Test with pytest (requires repo secrets)
      run: | # Only run S3 tests, i.e. those that weren't already covered by the standard workflow run.
        poetry run pytest -k 'test_s3_execution'
