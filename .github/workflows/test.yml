### A CI workflow template that runs linting and python testing

name: Test tap-universal-file

on:
  pull_request:
    types: [opened, synchronize, reopened]
  push:
    branches: [main]
  workflow_dispatch:
    inputs: {}

jobs:
  pytest:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11"]
    env:
      AWS_ACCESS_KEY_ID: NoSecretsNeeded
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      TAP_UNIVERSAL_FILE_PROTOCOL: file
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install Poetry
      env:
        PIP_CONSTRAINT: .github/workflows/constraints.txt
      run: |
        python -m pip install --upgrade pip
        pip install poetry
    - name: Install dependencies
      run: |
        poetry install --extras=s3
    - name: Test with pytest (no secrets needed)
      run: |
        poetry run pytest -k 'not test_s3_execution'
